/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.wijithafc.view.panels;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import lk.ijse.wijithaFC.controller.ManageItemsController;
import lk.ijse.wijithaFC.view.DialogFormAddItem;
import lk.ijse.wijithaFC.view.MainFrame;
import lk.ijse.wijithafc.dto.ItemDTO;
import lk.ijse.wijithafc.observer.Observer;

/**
 *
 * @author ASUS
 */
public class ItemPanel extends javax.swing.JPanel implements Observer {

    private String reservedItemCode = "";

    /**
     * Creates new form NewJPanel
     */
    public ItemPanel() {
        initComponents();
        loadAll();
        try {
            UnicastRemoteObject.exportObject(this, 0);
            ManageItemsController.getSubject().registerObserver(this);
        } catch (RemoteException ex) {
            Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblItemData.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (tblItemData.getSelectedRow() == -1) {
                    //btnRemove.setEnabled(false);
                    return;
                }
                try {
                    if (reservedItemCode == "") {
                        ManageItemsController.releaseItem(reservedItemCode);
                    }
                    reservedItemCode = tblItemData.getValueAt(tblItemData.getSelectedRow(), 0).toString();
                    boolean reserveCustomer = ManageItemsController.reserveItem(reservedItemCode);

                    if (reserveCustomer) {
                        int row = tblItemData.getSelectedRow();
                        cmbItemCode.setSelectedItem(tblItemData.getValueAt(tblItemData.getSelectedRow(), 0));
                    } else {
                        JOptionPane.showMessageDialog(ItemPanel.this, "Item has been already reserved");
                        tblItemData.clearSelection();
                    }

                } catch (Exception ex) {
                    Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        txtUnitPrice = new javax.swing.JTextField();
        cmbItemCode = new org.jdesktop.swingx.JXComboBox();
        jLabel48 = new javax.swing.JLabel();
        txtQtyOnHand = new javax.swing.JTextField();
        btnEdit = new javax.swing.JLabel();
        btnRemove = new javax.swing.JLabel();
        txtDiscountQty = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        txtCategory = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItemData = new org.jdesktop.swingx.JXTable();
        btnAddNew = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel42.setText(" Category              -");
        jPanel1.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 160, 30));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel43.setText(" Item desc.            -");
        jPanel1.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 160, 30));

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel44.setText(" Item Code            -");
        jPanel1.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 160, 30));

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel47.setText(" Unit Price              -");
        jPanel1.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 160, 30));

        jLabel41.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(204, 204, 204));
        jLabel41.setText("Edit Item Details");
        jPanel1.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 40));

        txtDesc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDesc.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 790, 30));

        txtUnitPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtUnitPrice.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtUnitPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 260, 30));

        cmbItemCode.setBorder(null);
        cmbItemCode.setEditable(true);
        cmbItemCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbItemCode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemCodeItemStateChanged(evt);
            }
        });
        cmbItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemCodeActionPerformed(evt);
            }
        });
        jPanel1.add(cmbItemCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 62, 260, 30));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setText(" QtyOnHand           -");
        jPanel1.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 160, 30));

        txtQtyOnHand.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtQtyOnHand.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtQtyOnHand, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 260, 30));

        btnEdit.setBackground(new java.awt.Color(102, 102, 102));
        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("      Edit ");
        btnEdit.setOpaque(true);
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditMouseClicked(evt);
            }
        });
        jPanel1.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 240, 130, 50));

        btnRemove.setBackground(new java.awt.Color(102, 102, 102));
        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(189, 103, 107));
        btnRemove.setText("  Remove");
        btnRemove.setOpaque(true);
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveMouseClicked(evt);
            }
        });
        jPanel1.add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 240, 130, 50));

        txtDiscountQty.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDiscountQty.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtDiscountQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 62, 110, 30));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setText(" Discount QTY     -");
        jPanel1.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 62, 140, 30));

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel50.setText(" Discount             -");
        jPanel1.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 110, 140, 30));

        txtDiscount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDiscount.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 110, 110, 30));

        txtCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCategory.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 260, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 1600, 300));

        tblItemData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Description", "Category", "UnitPrice", "QtyOnHand", "Discount QTY", "Discount"
            }
        ));
        tblItemData.setEditable(false);
        tblItemData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblItemData);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1600, 290));

        btnAddNew.setBackground(new java.awt.Color(204, 204, 204));
        btnAddNew.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddNew.setForeground(new java.awt.Color(255, 255, 255));
        btnAddNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/wijithaFC/images/add.png"))); // NOI18N
        btnAddNew.setText(" New Item");
        btnAddNew.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAddNew.setOpaque(true);
        btnAddNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddNewMouseClicked(evt);
            }
        });
        add(btnAddNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseClicked
        try {
            ItemDTO dTO = new ItemDTO(cmbItemCode.getSelectedItem().toString(), txtDesc.getText(), txtCategory.getText(), Double.parseDouble(txtUnitPrice.getText()), Integer.parseInt(txtQtyOnHand.getText()), Integer.parseInt(txtDiscountQty.getText()), Double.parseDouble(txtDiscount.getText()));
            if (ManageItemsController.reserveItem(dTO.getItemCode())) {
                boolean updateItem = ManageItemsController.updateItem(dTO);
                if (updateItem) {
                    JOptionPane.showMessageDialog(null, "Item has been updated successfully");
                    clearFields();
                    loadAll();
                } else {
                    JOptionPane.showMessageDialog(null, "Update Failled");
                }
            }
            ManageItemsController.releaseItem(dTO.getItemCode());
        } catch (Exception ex) {
            Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnEditMouseClicked

    private void btnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseClicked
        try {
            ItemDTO dTO = new ItemDTO(cmbItemCode.getSelectedItem().toString(), txtDesc.getText(), txtCategory.getText(), Double.parseDouble(txtUnitPrice.getText()), Integer.parseInt(txtQtyOnHand.getText()), Integer.parseInt(txtDiscountQty.getText()), Double.parseDouble(txtDiscount.getText()));
            if (ManageItemsController.reserveItem(dTO.getItemCode())) {
                boolean delete = ManageItemsController.deleteItem(dTO);
                if (delete) {
                    JOptionPane.showMessageDialog(null, "Item has been deleted successfully");
                    clearFields();
                    loadAll();
                } else {
                    JOptionPane.showMessageDialog(null, "delete Failled");
                }
            }
            ManageItemsController.releaseItem(dTO.getItemCode());
        } catch (Exception ex) {
            Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRemoveMouseClicked

    private void btnAddNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddNewMouseClicked
        DialogFormAddItem addItem = new DialogFormAddItem(MainFrame.getMainFrame(), true);
        addItem.setVisible(true);
        loadAll();
    }//GEN-LAST:event_btnAddNewMouseClicked

    private void cmbItemCodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemCodeItemStateChanged
        
        try {
            if (cmbItemCode.getSelectedIndex() != -1) {
                ItemDTO dto = ManageItemsController.searchItem(cmbItemCode.getSelectedItem().toString());
                txtDesc.setText(dto.getDescription());
                txtUnitPrice.setText(Double.toString(dto.getUnitPrice()));
                txtQtyOnHand.setText(Integer.toString(dto.getQtyOnHand()));
                txtCategory.setText(dto.getCategory());
                txtDiscountQty.setText(Integer.toString(dto.getDiscountQTY()));
                txtDiscount.setText(Double.toString(dto.getDiscount()));
            }
        } catch (Exception ex) {
            Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cmbItemCodeItemStateChanged

    private void cmbItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbItemCodeActionPerformed

    private void tblItemDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemDataMouseClicked
        if (tblItemData.getSelectedRow() != -1) {
            cmbItemCode.setSelectedItem(tblItemData.getValueAt(tblItemData.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_tblItemDataMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAddNew;
    private javax.swing.JLabel btnEdit;
    private javax.swing.JLabel btnRemove;
    private org.jdesktop.swingx.JXComboBox cmbItemCode;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTable tblItemData;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtDiscountQty;
    private javax.swing.JTextField txtQtyOnHand;
    private javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables

    private void loadAll() {
        DefaultTableModel dtm = (DefaultTableModel) tblItemData.getModel();
        dtm.setRowCount(0);
        cmbItemCode.removeAllItems();
        try {
            List<ItemDTO> all = ManageItemsController.getAll();
            if (all != null) {
                for (ItemDTO itemDTO : all) {
                    Object[] rawData = {itemDTO.getItemCode(), itemDTO.getDescription(), itemDTO.getCategory(), itemDTO.getUnitPrice(), itemDTO.getQtyOnHand(), itemDTO.getDiscountQTY(), itemDTO.getDiscount()};
                    dtm.addRow(rawData);
                    cmbItemCode.addItem(itemDTO.getItemCode());
                }

            }
        } catch (Exception ex) {
            Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void updateObservers() throws Exception {
        clearFields();
        loadAll();

    }

    private void clearFields() {
        txtDesc.setText(null);
        txtQtyOnHand.setText(null);
        txtUnitPrice.setText(null);
    }

}
