/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.wijithafc.view.panels;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.wijithaFC.controller.ManageItemsController;
import lk.ijse.wijithafc.controller.manageOrderController;
import lk.ijse.wijithafc.dto.ItemDTO;
import lk.ijse.wijithafc.dto.OrderDTO;
import lk.ijse.wijithafc.dto.OrderDetailDTO;
import lk.ijse.wijithafc.dto.PaymentDTO;

/**
 *
 * @author ASUS
 */
public class ViewOrders extends javax.swing.JPanel {

    /**
     * Creates new form ViewOrders
     */
    public ViewOrders() {
        initComponents();
        loadOrders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtDate = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        btnRemove = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderDetail = new org.jdesktop.swingx.JXTable();
        jLabel56 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        cmbOrders = new org.jdesktop.swingx.JXComboBox();
        btnEditSupplier = new javax.swing.JLabel();
        btnRemoveSupplier = new javax.swing.JLabel();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        txtPayBycus = new org.jdesktop.swingx.JXTextField();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        txtChange = new org.jdesktop.swingx.JXTextField();
        txttotalDiscount = new org.jdesktop.swingx.JXTextField();
        txtTotalAmount = new org.jdesktop.swingx.JXTextField();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDate.setEditable(false);
        txtDate.setBackground(new java.awt.Color(255, 255, 255));
        txtDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 60, 260, 30));

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(29, 120, 156));
        jLabel47.setText(" User  ID -");
        jPanel1.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 120, 30));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel48.setText("   Date       -");
        jPanel1.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 60, 110, 30));

        btnRemove.setBackground(new java.awt.Color(102, 102, 102));
        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.setText(" Remove from table");
        btnRemove.setOpaque(true);
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveMouseClicked(evt);
            }
        });
        jPanel1.add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 560, 140, 30));

        jLabel41.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(204, 204, 204));
        jLabel41.setText("Order Details");
        jPanel1.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 40));

        tblOrderDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemCode", "Item Desc", "Category", "Unit Price", "Quantity", "Discount", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrderDetail);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 1600, 410));

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel56.setText("   Time       -");
        jPanel1.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 60, 120, 30));

        txtTime.setEditable(false);
        txtTime.setBackground(new java.awt.Color(255, 255, 255));
        txtTime.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTime.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 60, 260, 30));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(29, 120, 156));
        jLabel49.setText(" Order ID -");
        jPanel1.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 120, 30));

        txtUserID.setEditable(false);
        txtUserID.setBackground(new java.awt.Color(255, 255, 255));
        txtUserID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtUserID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtUserID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtUserID, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 260, 30));

        cmbOrders.setBorder(null);
        cmbOrders.setEditable(true);
        cmbOrders.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbOrders.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOrdersItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbOrders, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 260, 30));

        btnEditSupplier.setBackground(new java.awt.Color(102, 102, 102));
        btnEditSupplier.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnEditSupplier.setForeground(new java.awt.Color(255, 255, 255));
        btnEditSupplier.setText("      Edit ");
        btnEditSupplier.setOpaque(true);
        btnEditSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditSupplierMouseClicked(evt);
            }
        });
        jPanel1.add(btnEditSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 590, 130, 50));

        btnRemoveSupplier.setBackground(new java.awt.Color(102, 102, 102));
        btnRemoveSupplier.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnRemoveSupplier.setForeground(new java.awt.Color(189, 103, 107));
        btnRemoveSupplier.setText("  Remove");
        btnRemoveSupplier.setOpaque(true);
        btnRemoveSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveSupplierMouseClicked(evt);
            }
        });
        jPanel1.add(btnRemoveSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 590, 130, 50));

        jXLabel1.setText("Paid By Customer");
        jXLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(jXLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 600, 170, 30));

        txtPayBycus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPayBycus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(txtPayBycus, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 600, 210, 30));

        jXLabel2.setText("Change");
        jXLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(jXLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 600, 80, 30));

        txtChange.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChange.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(txtChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 600, 230, 30));

        txttotalDiscount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txttotalDiscount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txttotalDiscount.setPrompt("Total Discount");
        jPanel1.add(txttotalDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 550, 230, 30));

        txtTotalAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalAmount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTotalAmount.setPrompt("Total Amount");
        jPanel1.add(txtTotalAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1380, 550, 220, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblOrderDetail.getModel();
        dtm.removeRow(tblOrderDetail.getSelectedRow());
    }//GEN-LAST:event_btnRemoveMouseClicked

    private void cmbOrdersItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOrdersItemStateChanged
        DefaultTableModel dtm = (DefaultTableModel) tblOrderDetail.getModel();
        dtm.setRowCount(0);
        try {
            List<OrderDTO> all = manageOrderController.getAll();
            if (all != null && cmbOrders.getSelectedIndex() != -1) {
                for (OrderDTO orderDTO : all) {
                    if (orderDTO.getOrderID().equals(cmbOrders.getSelectedItem().toString())) {
                        PaymentDTO paymentDTO = orderDTO.getPaymentDTO();
                        txtDate.setText(orderDTO.getOrderDate());
                        txtChange.setText(Double.toString(paymentDTO.getChange()));
                        txtTotalAmount.setText(Double.toString(paymentDTO.getAmount()));
                        txtUserID.setText(orderDTO.getUserID());
                        txttotalDiscount.setText(Double.toString(paymentDTO.getTotalDiscount()));
                        txtPayBycus.setText(Double.toString(paymentDTO.getPaidByCus()));
                        txtTime.setText(orderDTO.getOrderTime());
                        if (orderDTO.getDetailList() != null) {
                            for (OrderDetailDTO od : orderDTO.getDetailList()) {
                                ItemDTO item = ManageItemsController.searchItem(od.getItemCode());
                                double amount = od.getQty() * od.getUnitPrice();
                                Object[] rawData = {od.getItemCode(), item.getDescription(), item.getCategory(), od.getUnitPrice(), od.getQty(), od.getDiscount(), amount};
                                dtm.addRow(rawData);
                            }
                        }
                    }
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewOrders.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbOrdersItemStateChanged

    private void btnEditSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditSupplierMouseClicked
        try {
            List<OrderDetailDTO> list = new ArrayList<>();
            for (int i = 0; i < tblOrderDetail.getRowCount(); i++) {
                OrderDetailDTO detailDTO = new OrderDetailDTO(tblOrderDetail.getValueAt(i, 0).toString(), Double.parseDouble(tblOrderDetail.getValueAt(i, 3).toString()), Integer.parseInt(tblOrderDetail.getValueAt(i, 4).toString()), Double.parseDouble(tblOrderDetail.getValueAt(i, 5).toString()));
                list.add(detailDTO);
            }
            PaymentDTO paymentDTO = new PaymentDTO(Double.parseDouble(txtTotalAmount.getText()), Double.parseDouble(txttotalDiscount.getText()), Double.parseDouble(txtPayBycus.getText()), Double.parseDouble(txtChange.getText()));
            OrderDTO dTO = new OrderDTO(cmbOrders.getSelectedItem().toString(), txtUserID.getText(), txtDate.getText(), txtTime.getText(), list, paymentDTO);
            boolean update = manageOrderController.updateOrder(dTO);
            if (update) {
                JOptionPane.showMessageDialog(null, "Order has been updated successfully");
                clearFields();
                loadOrders();
            } else {
                JOptionPane.showMessageDialog(null, "update Fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewOrders.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnEditSupplierMouseClicked

    private void btnRemoveSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveSupplierMouseClicked
        try {
            List<OrderDetailDTO> list = new ArrayList<>();
            for (int i = 0; i < tblOrderDetail.getRowCount(); i++) {
                OrderDetailDTO detailDTO = new OrderDetailDTO(tblOrderDetail.getValueAt(i, 0).toString(), Double.parseDouble(tblOrderDetail.getValueAt(i, 3).toString()), Integer.parseInt(tblOrderDetail.getValueAt(i, 4).toString()), Double.parseDouble(tblOrderDetail.getValueAt(i, 5).toString()));
                list.add(detailDTO);
            }
            PaymentDTO paymentDTO = new PaymentDTO(Double.parseDouble(txtTotalAmount.getText()), Double.parseDouble(txttotalDiscount.getText()), Double.parseDouble(txtPayBycus.getText()), Double.parseDouble(txtChange.getText()));
            OrderDTO dTO = new OrderDTO(cmbOrders.getSelectedItem().toString(), txtUserID.getText(), txtDate.getText(), txtTime.getText(), list, paymentDTO);
            boolean deleteOrder = manageOrderController.deleteOrder(dTO);
            if (deleteOrder) {
                JOptionPane.showMessageDialog(null, "Order has been deleted successfully");
                clearFields();
                loadOrders();
            } else {
                JOptionPane.showMessageDialog(null, "Delete Fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewOrders.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnRemoveSupplierMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnEditSupplier;
    private javax.swing.JLabel btnRemove;
    private javax.swing.JLabel btnRemoveSupplier;
    private org.jdesktop.swingx.JXComboBox cmbOrders;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXTable tblOrderDetail;
    private org.jdesktop.swingx.JXTextField txtChange;
    private javax.swing.JTextField txtDate;
    private org.jdesktop.swingx.JXTextField txtPayBycus;
    private javax.swing.JTextField txtTime;
    private org.jdesktop.swingx.JXTextField txtTotalAmount;
    private javax.swing.JTextField txtUserID;
    private org.jdesktop.swingx.JXTextField txttotalDiscount;
    // End of variables declaration//GEN-END:variables

    private void loadOrders() {
        cmbOrders.removeAllItems();
        try {
            List<OrderDTO> all = manageOrderController.getAll();
            if (all != null) {
                for (OrderDTO orderDTO : all) {
                    cmbOrders.addItem(orderDTO.getOrderID());
                }

            }

        } catch (Exception ex) {
            Logger.getLogger(ViewOrders.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearFields() {
        txtChange.setText(null);
        txtPayBycus.setText(null);
        txtTotalAmount.setText(null);
        txttotalDiscount.setText(null);
    }

}
