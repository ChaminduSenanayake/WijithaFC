/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.wijithafc.view.panels;

import java.awt.Dialog;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.jasper.IJSEJasperViewer;
import lk.ijse.wijithaFC.controller.ManageItemsController;
import lk.ijse.wijithafc.common.IDGenerator;
import lk.ijse.wijithafc.controller.ManageBatchController;
import lk.ijse.wijithafc.controller.ReportsController;
import lk.ijse.wijithafc.controller.manageOrderController;
import lk.ijse.wijithafc.dto.BatchDTO;
import lk.ijse.wijithafc.dto.ItemDTO;
import lk.ijse.wijithafc.dto.OrderDTO;
import lk.ijse.wijithafc.dto.OrderDetailDTO;
import lk.ijse.wijithafc.dto.PaymentDTO;
import lk.ijse.wijithafc.observer.Observer;
import net.sf.jasperreports.engine.JasperPrint;

/**
 *
 * @author ASUS
 */
public class CashierPanel extends javax.swing.JPanel implements Observer {

    private int discountQTY;
    private double discount;

    /**
     * Creates new form CashierPanel
     */
    public CashierPanel() {
        initComponents();
        loadAllItems();
        loadSystemDate();
        loadSystemTime();
        loadNewID();
        try {
            UnicastRemoteObject.exportObject(this, 0);
            manageOrderController.getSubject().registerObserver(this);
            ManageItemsController.getSubject().registerObserver(this);
            ManageBatchController.getSubject().registerObserver(this);
        } catch (RemoteException ex) {
            Logger.getLogger(CashierPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CashierPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbItemCode.requestFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtOrderID = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        cmbItemCode = new org.jdesktop.swingx.JXComboBox();
        jLabel52 = new javax.swing.JLabel();
        btnRemove = new javax.swing.JLabel();
        btnSave = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        txtQtyOnHand = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        txtItemPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderDetail = new org.jdesktop.swingx.JXTable();
        jLabel55 = new javax.swing.JLabel();
        txtCategory = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        txttotalDiscount = new org.jdesktop.swingx.JXTextField();
        txtTotalAmount = new org.jdesktop.swingx.JXTextField();
        txtPayBycus = new org.jdesktop.swingx.JXTextField();
        txtChange = new org.jdesktop.swingx.JXTextField();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtOrderID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtOrderID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtOrderID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtOrderID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIDActionPerformed(evt);
            }
        });
        add(txtOrderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 260, 30));

        txtDate.setEditable(false);
        txtDate.setBackground(new java.awt.Color(255, 255, 255));
        txtDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 0, 260, 30));

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(29, 120, 156));
        jLabel47.setText(" Order ID -");
        add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 120, 30));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel48.setText("   Date       -");
        add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, 120, 30));

        cmbItemCode.setBorder(null);
        cmbItemCode.setEditable(true);
        cmbItemCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbItemCode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemCodeItemStateChanged(evt);
            }
        });
        add(cmbItemCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 260, 30));

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel52.setText(" Item Code      -");
        add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 120, 30));

        btnRemove.setBackground(new java.awt.Color(102, 102, 102));
        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.setText(" Remove from table");
        btnRemove.setOpaque(true);
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveMouseClicked(evt);
            }
        });
        add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 560, 140, 30));

        btnSave.setBackground(new java.awt.Color(102, 102, 102));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("     Save ");
        btnSave.setOpaque(true);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(1470, 610, 130, 50));

        txtDesc.setEditable(false);
        txtDesc.setBackground(new java.awt.Color(255, 255, 255));
        txtDesc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDesc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDesc.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(txtDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 670, 30));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setText(" Item Desc     -");
        add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 120, 30));

        txtQtyOnHand.setEditable(false);
        txtQtyOnHand.setBackground(new java.awt.Color(255, 255, 255));
        txtQtyOnHand.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtQtyOnHand.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQtyOnHand.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(txtQtyOnHand, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 150, 250, 30));

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel50.setText("Qty On Hand -    ");
        add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, 130, 30));

        txtQty.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtQty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQty.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 180, 260, 50));

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel51.setText("Quantity   -");
        add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 200, 120, 30));

        jLabel41.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(204, 204, 204));
        jLabel41.setText("Order Details");
        add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 40));

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel54.setText(" Item Price     -");
        add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 120, 30));

        txtItemPrice.setEditable(false);
        txtItemPrice.setBackground(new java.awt.Color(255, 255, 255));
        txtItemPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtItemPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtItemPrice.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(txtItemPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 260, 30));

        tblOrderDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemCode", "Item Desc", "Category", "Unit Price", "Quantity", "Discount", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrderDetail.setEditable(false);
        jScrollPane1.setViewportView(tblOrderDetail);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 1600, 300));

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel55.setText(" Category       -");
        add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 100, 120, 30));

        txtCategory.setEditable(false);
        txtCategory.setBackground(new java.awt.Color(255, 255, 255));
        txtCategory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCategory.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCategory.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(txtCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 100, 260, 30));

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel56.setText("   Time       -");
        add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 0, 120, 30));

        txtTime.setEditable(false);
        txtTime.setBackground(new java.awt.Color(255, 255, 255));
        txtTime.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTime.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 0, 260, 30));

        txttotalDiscount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txttotalDiscount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txttotalDiscount.setPrompt("Total Discount");
        add(txttotalDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 550, 230, 30));

        txtTotalAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalAmount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTotalAmount.setPrompt("Total Amount");
        add(txtTotalAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1380, 550, 220, 30));

        txtPayBycus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPayBycus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtPayBycus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPayBycusActionPerformed(evt);
            }
        });
        add(txtPayBycus, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 600, 210, 30));

        txtChange.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChange.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add(txtChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 600, 230, 30));

        jXLabel1.setText("Paid By Customer");
        jXLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add(jXLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 600, 170, 30));

        jXLabel2.setText("Change");
        jXLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add(jXLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 600, 80, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void txtOrderIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIDActionPerformed

    private void tblGRNDtblOrderDetailicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGRNDetailMouseClicked

    }//GEN-LAST:event_tblGRNDetailMouseClicked

    private void btnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseClicked
        if (tblOrderDetail.getSelectedRowCount() == 1) {
            DefaultTableModel dtm = (DefaultTableModel) tblOrderDetail.getModel();
            dtm.removeRow(tblOrderDetail.getSelectedRow());
            loadAllItems();
        }
    }//GEN-LAST:event_btnRemoveMouseClicked

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        PaymentDTO paymentDTO = new PaymentDTO(Double.parseDouble(txtTotalAmount.getText()), Double.parseDouble(txttotalDiscount.getText()), Double.parseDouble(txtPayBycus.getText()), Double.parseDouble(txtChange.getText()));
        OrderDTO dTO = new OrderDTO(txtOrderID.getText(), lk.ijse.wijithaFC.view.MainFrame.getUserID(), txtDate.getText(), txtTime.getText(), null, paymentDTO);
        List<OrderDetailDTO> list = new ArrayList<>();
        for (int i = 0; i < tblOrderDetail.getRowCount(); i++) {
            OrderDetailDTO detailDTO = new OrderDetailDTO(tblOrderDetail.getValueAt(i, 0).toString(), Double.parseDouble(tblOrderDetail.getValueAt(i, 3).toString()), Integer.parseInt(tblOrderDetail.getValueAt(i, 4).toString()), Double.parseDouble(tblOrderDetail.getValueAt(i, 5).toString()));
            list.add(detailDTO);
        }
        dTO.setDetailList(list);
        try {
            boolean addOrder = manageOrderController.addOrder(dTO);
            if (addOrder) {
                JOptionPane.showMessageDialog(null, "Order has been added successfully");
                clearFields();
                loadAllItems();
                printBill(dTO.getOrderID());
            } else {
                JOptionPane.showMessageDialog(null, "Order failed");
            }
        } catch (Exception ex) {
            Logger.getLogger(CashierPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtQty.requestFocus();
    }//GEN-LAST:event_btnSaveMouseClicked

    private void cmbItemCodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemCodeItemStateChanged
        if (cmbItemCode.getSelectedIndex() != -1) {
            try {
                ItemDTO searchItem = ManageItemsController.searchItem(cmbItemCode.getSelectedItem().toString());
                txtDesc.setText(searchItem.getDescription());
                txtQtyOnHand.setText(Integer.toString(searchItem.getQtyOnHand()));
                txtItemPrice.setText(Double.toString(searchItem.getUnitPrice()));
                txtCategory.setText(searchItem.getCategory());

            } catch (Exception ex) {
                Logger.getLogger(CashierPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cmbItemCodeItemStateChanged

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        if (cmbItemCode.getSelectedIndex() != -1) {
            try {
                DefaultTableModel dtm = (DefaultTableModel) tblOrderDetail.getModel();
                ItemDTO searchItem = ManageItemsController.searchItem(cmbItemCode.getSelectedItem().toString());
                int discountQTY = searchItem.getDiscountQTY();
                double discount = searchItem.getDiscount();

                int qty = Integer.parseInt(txtQty.getText());
                int qtyOnHand = Integer.parseInt(txtQtyOnHand.getText());
                double price = Double.parseDouble(txtItemPrice.getText());
                double amount = price * qty;
                if (discountQTY > 0) {
                    double disc = (double) ((int) (qty / discountQTY)) * discount;
                    Object[] rawData = {cmbItemCode.getSelectedItem().toString(), txtDesc.getText(), txtCategory.getText(), txtItemPrice.getText(), txtQty.getText(), disc, amount};
                    dtm.addRow(rawData);

                } else {
                    Object[] rawData = {cmbItemCode.getSelectedItem().toString(), txtDesc.getText(), txtCategory.getText(), txtItemPrice.getText(), txtQty.getText(), 0, amount};
                    dtm.addRow(rawData);
                    txtQtyOnHand.setText(Integer.toString(qtyOnHand - qty));
                }
                calculateAmount();

            } catch (Exception ex) {
                Logger.getLogger(CashierPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_txtQtyActionPerformed

    private void txtPayBycusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPayBycusActionPerformed
        double paidByCus = Double.parseDouble(txtPayBycus.getText());
        double tAmount = Double.parseDouble(txtTotalAmount.getText());
        double tDiscount = Double.parseDouble(txttotalDiscount.getText());
        txtChange.setText((paidByCus - tAmount + tDiscount) + "");
    }//GEN-LAST:event_txtPayBycusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnRemove;
    private javax.swing.JLabel btnSave;
    private org.jdesktop.swingx.JXComboBox cmbItemCode;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXTable tblOrderDetail;
    private javax.swing.JTextField txtCategory;
    private org.jdesktop.swingx.JXTextField txtChange;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtItemPrice;
    private javax.swing.JTextField txtOrderID;
    private org.jdesktop.swingx.JXTextField txtPayBycus;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtQtyOnHand;
    private javax.swing.JTextField txtTime;
    private org.jdesktop.swingx.JXTextField txtTotalAmount;
    private org.jdesktop.swingx.JXTextField txttotalDiscount;
    // End of variables declaration//GEN-END:variables
    private void loadAllItems() {
        cmbItemCode.removeAllItems();
        try {
            List<ItemDTO> all = ManageItemsController.getAll();
            if (all != null) {
                for (ItemDTO itemDTO : all) {
                    cmbItemCode.addItem(itemDTO.getItemCode());
                }

            }
        } catch (Exception ex) {
            Logger.getLogger(CashierPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSystemDate() {
        Date d1 = new Date(); //Current System date
        SimpleDateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        String formatDate = df.format(d1);
        txtDate.setText(formatDate);

    }

    private void loadSystemTime() {
        Date d1 = new Date(); //Current System date
        SimpleDateFormat df = new SimpleDateFormat("HH:mm:ss");
        String formatDate = df.format(d1);
        txtTime.setText(formatDate);

    }

    private void clearFields() {
        txtQty.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) tblOrderDetail.getModel();
        dtm.setRowCount(0);
        txtPayBycus.setText(null);
        txtTotalAmount.setText(null);
        txttotalDiscount.setText(null);
        txtChange.setText(null);
    }

    @Override
    public void updateObservers() throws Exception {
        loadAllItems();
        loadNewID();

    }

    private void loadNewID() {
        try {
            String lastID = IDGenerator.getLastID(IDGenerator.IdType.ORDER);
            txtOrderID.setText(lastID);
        } catch (Exception ex) {
            Logger.getLogger(CashierPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void calculateAmount() {
        if (tblOrderDetail.getRowCount() != -1) {
            double tAmount = 0;
            double tDiscount = 0;
            for (int i = 0; i < tblOrderDetail.getRowCount(); i++) {
                tAmount = Double.parseDouble(tblOrderDetail.getValueAt(i, 6).toString());
                tDiscount = Double.parseDouble(tblOrderDetail.getValueAt(i, 5).toString());
            }
            txtTotalAmount.setText(tAmount + "");
            txttotalDiscount.setText(tDiscount + "");
        }
    }

    private void printBill(String oid) {
        try {
            JasperPrint filledReport = ReportsController.getBill(oid);
            IJSEJasperViewer frmJasperViewer = new IJSEJasperViewer(filledReport);
            frmJasperViewer.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frmJasperViewer.setTitle("BILL");
            frmJasperViewer.setSize(1000, 800);
            frmJasperViewer.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
            frmJasperViewer.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(CashierPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
